// <auto-generated />
using System;
using Main_Node.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Main_Node.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20220531170511_rename-Enum")]
    partial class renameEnum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("Main_Node.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MultipleTasksId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MultipleTasksId");

                    b.ToTable("Task");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Task");
                });

            modelBuilder.Entity("Main_Node.Models.MultipleTasks", b =>
                {
                    b.HasBaseType("Main_Node.Models.Task");

                    b.HasDiscriminator().HasValue("MultipleTasks");
                });

            modelBuilder.Entity("Main_Node.Models.SingleTask", b =>
                {
                    b.HasBaseType("Main_Node.Models.Task");

                    b.HasDiscriminator().HasValue("SingleTask");
                });

            modelBuilder.Entity("Main_Node.Models.SubTask", b =>
                {
                    b.HasBaseType("Main_Node.Models.Task");

                    b.HasDiscriminator().HasValue("SubTask");
                });

            modelBuilder.Entity("Main_Node.Models.Task", b =>
                {
                    b.HasOne("Main_Node.Models.MultipleTasks", null)
                        .WithMany("Tasks")
                        .HasForeignKey("MultipleTasksId");
                });

            modelBuilder.Entity("Main_Node.Models.MultipleTasks", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
